{"ast":null,"code":"var _jsxFileName = \"/Users/ryanstewart/ryan/final_project/react-front-end/src/components/HighScores.js\",\n  _s = $RefreshSig$();\n// highscores.js\nimport React, { useState, useEffect } from \"react\";\nimport \"../style/home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HighScores() {\n  _s();\n  const [highScores, setHighScores] = useState([]);\n  const updateNickname = async () => {\n    const idToUpdate = 16; // Replace with the actual ID you want to update\n    const newNickname = 'Smartie'; // Replace with the new nickname\n\n    try {\n      const response = await fetch(\"http://localhost:8080/api/high-scores/\".concat(idToUpdate), {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          nickname: newNickname\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('Nickname updated successfully');\n      } else {\n        console.error('Error updating nickname:', data.error);\n      }\n    } catch (error) {\n      console.error('Error updating nickname:', error);\n    }\n  };\n  updateNickname();\n  useEffect(() => {\n    // Fetch high scores from the server\n    fetch(\"http://localhost:8080/api/high-scores\").then(response => response.json()).then(data => {\n      console.log(\"API Response:\", data);\n\n      // Filter out entries with null names\n      const filteredHighScores = data.games.filter(score => score.nickname !== null);\n\n      // Sort the high scores first by score in descending order, and then by completion time in ascending order\n      const sortedHighScores = filteredHighScores.sort((a, b) => {\n        if (b.score !== a.score) {\n          // If scores are different, sort by score in descending order\n          return b.score - a.score;\n        } else {\n          // If scores are the same, sort by completion time in ascending order\n          return a.completionTime - b.completionTime;\n        }\n      });\n\n      // Take only the top 24 high scores\n      const topHighScores = sortedHighScores.slice(0, 24);\n      setHighScores(topHighScores);\n    }).catch(error => console.error(\"Error fetching high scores:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"score-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"board\",\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-columns\",\n      children: highScores.map((score, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-row\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"score\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"player-name\",\n              children: score.nickname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"player-score\",\n              children: score.score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(HighScores, \"F/nVh8Qo5lqD3dt/9x0DqVYJahU=\");\n_c = HighScores;\nexport default HighScores;\nvar _c;\n$RefreshReg$(_c, \"HighScores\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","HighScores","_s","highScores","setHighScores","updateNickname","idToUpdate","newNickname","response","fetch","concat","method","headers","body","JSON","stringify","nickname","data","json","ok","console","log","error","then","filteredHighScores","games","filter","score","sortedHighScores","sort","a","b","completionTime","topHighScores","slice","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","_c","$RefreshReg$"],"sources":["/Users/ryanstewart/ryan/final_project/react-front-end/src/components/HighScores.js"],"sourcesContent":["// highscores.js\nimport React, { useState, useEffect } from \"react\";\nimport \"../style/home.css\";\nfunction HighScores() {\n  const [highScores, setHighScores] = useState([]);\n\n  const updateNickname = async () => {\n    const idToUpdate = 16; // Replace with the actual ID you want to update\n    const newNickname = 'Smartie'; // Replace with the new nickname\n  \n    try {\n      const response = await fetch(`http://localhost:8080/api/high-scores/${idToUpdate}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ nickname: newNickname }),\n      });\n  \n      const data = await response.json();\n  \n      if (response.ok) {\n        console.log('Nickname updated successfully');\n      } else {\n        console.error('Error updating nickname:', data.error);\n      }\n    } catch (error) {\n      console.error('Error updating nickname:', error);\n    }\n  };\n  \n  updateNickname();\n  \n\n  useEffect(() => {\n    // Fetch high scores from the server\n    fetch(\"http://localhost:8080/api/high-scores\")\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"API Response:\", data);\n\n        // Filter out entries with null names\n        const filteredHighScores = data.games.filter(\n          (score) => score.nickname !== null\n        );\n\n        // Sort the high scores first by score in descending order, and then by completion time in ascending order\n        const sortedHighScores = filteredHighScores.sort((a, b) => {\n          if (b.score !== a.score) {\n            // If scores are different, sort by score in descending order\n            return b.score - a.score;\n          } else {\n            // If scores are the same, sort by completion time in ascending order\n            return a.completionTime - b.completionTime;\n          }\n        });\n\n        // Take only the top 24 high scores\n        const topHighScores = sortedHighScores.slice(0, 24);\n\n        setHighScores(topHighScores);\n      })\n      .catch((error) => console.error(\"Error fetching high scores:\", error));\n  }, []);\n\n  return (\n    <div className=\"score-box\">\n      <h2 className=\"board\">Leaderboard</h2>\n      <div className=\"score-columns\">\n        {highScores.map((score, index) => (\n          <div key={index} className=\"score-row\">\n            <ul className=\"list\">\n              <li className=\"score\">\n                <span className=\"player-name\">{score.nickname}</span>\n                <span className=\"player-score\">{score.score}</span>\n              </li>\n            </ul>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default HighScores;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}