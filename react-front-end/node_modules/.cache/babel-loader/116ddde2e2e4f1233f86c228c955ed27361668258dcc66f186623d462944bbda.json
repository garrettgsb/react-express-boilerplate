{"ast":null,"code":"var _jsxFileName = \"/Users/ryanstewart/ryan/final_project/react-front-end/src/components/quiz.js\",\n  _s = $RefreshSig$();\n// quiz.js\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../style/quiz.css\";\nimport Dude from \"../asset/dude.png\";\nimport Dude2 from \"../asset/thumbs-down.png\";\nimport Dude3 from \"../asset/thinking-dude.png\";\nimport Header from \"./header\";\nimport { AppContext } from \"./AppContext\";\nimport { handleAudio, sounds } from \"./SoundHelper\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizComponent = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    state\n  } = useContext(AppContext);\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [currentRound, setCurrentRound] = useState(1);\n  const [lives, setLives] = useState(5);\n  const [showHint, setShowHint] = useState(false);\n  const [score, setScore] = useState(0);\n  const [hintUsed, setHintUsed] = useState(false);\n  const [showDudeImage, setShowDudeImage] = useState(false); // thumbs up\n  const [options, setOptions] = useState([]);\n  const [fiftyOptions, setFiftyOptions] = useState([]);\n  const [clickFifty, setClickFifty] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [currentQuestionNumber, setCurrentQuestionNumber] = useState(1);\n  const [totalQuestions, setTotalQuestions] = useState(0);\n  const [swapCount, setSwapCount] = useState(0);\n  const [hintCount, setHintCount] = useState(0);\n  const [fiftyCount, setFiftyCount] = useState(0);\n  const [skipCount, setSkipCount] = useState(0);\n  const timerDuration = 300; // five minute timer\n\n  const [clickSwap, setClickSwap] = useState(false);\n  const [numberOfquestionsPerRound, setNumberOfQuestionsPerRound] = useState(0);\n  const [showDude2Image, setShowDude2Image] = useState(false); // thumbs down\n  const [showDude3Image, setShowDude3Image] = useState(true); // thinking face\n  const [startTime, setStartTime] = useState(null);\n  const [timer, setTimer] = useState(timerDuration);\n  const [finishQuiz, setFinishQuiz] = useState(false);\n  const [finishTime, setFinishTime] = useState('');\n  const optionLabel = {\n    0: \"A\",\n    1: \"B\",\n    2: \"C\",\n    3: \"D\"\n  };\n  const fetchQuestions = () => {\n    // fetch(`https://quizjs-api.onrender.com/api/questions/${currentRound}`)\n    axios.get(\"/api/questions/\".concat(currentRound))\n    // .then((response) => {\n    //   if (!response.ok) {\n    //     throw new Error(`HTTP error! Status: ${response.status}`)\n    //   }\n    //   return response.json()\n    // })\n    .then(response => {\n      const data = response.data;\n      setQuestions(data.questions);\n      setTotalQuestions(data.questions.length);\n      const opts = [data.questions[currentQuestionIndex].optiona, data.questions[currentQuestionIndex].optionb, data.questions[currentQuestionIndex].optionc, data.questions[currentQuestionIndex].optiond];\n      setOptions(opts);\n      setFiftyOptions(opts);\n      setCurrentQuestionIndex(0);\n    }).catch(error => console.error('Error fetching questions:', error));\n  };\n  useEffect(() => {\n    // Fetch questions\n    fetchQuestions();\n  }, [currentRound]);\n  useEffect(() => {\n    // record start time\n    setStartTime(new Date());\n  }, []);\n  useEffect(() => {\n    const timerInterval = setInterval(() => {\n      if (timer > 0) {\n        setTimer(timer - 1);\n      } else {\n        setTimer(0); // Set timer to zero instead of going negative\n        setGameOver(true);\n      }\n    }, 1000);\n    return () => clearInterval(timerInterval);\n  }, [timer]);\n  useEffect(() => {\n    if (questions.length > 0 && currentQuestionIndex < questions.length) {\n      const opts = [questions[currentQuestionIndex].optiona, questions[currentQuestionIndex].optionb, questions[currentQuestionIndex].optionc, questions[currentQuestionIndex].optiond];\n      setOptions(opts);\n      setFiftyOptions(opts);\n    }\n  }, [currentQuestionIndex]);\n  const handleFiftyClick = () => {\n    const question = questions[currentQuestionIndex];\n    const correctIndex = Object.keys(optionLabel).find(key => optionLabel[key] === question.correct_option);\n    const newOption = [];\n    newOption.push(options[correctIndex]);\n    let random = Math.floor(Math.random() * 4);\n    while (random === +correctIndex) {\n      random = Math.floor(Math.random() * 4);\n    }\n    newOption.push(options[random]);\n    setFiftyOptions(newOption);\n    setClickFifty(true);\n    setFiftyCount(fiftyCount + 1);\n    handleAudio(state.isMute, sounds.fifty);\n  };\n  const handleSwapClick = () => {\n    if (numberOfquestionsPerRound + 1 % 5 === 4) {\n      setCurrentRound(prevRound => prevRound + 1);\n      setCurrentQuestionIndex(0);\n      setNumberOfQuestionsPerRound(0);\n      setClickFifty(false);\n      setClickSwap(false);\n    } else {\n      setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n      setClickSwap(true);\n      setSwapCount(swapCount + 1);\n    }\n    handleAudio(state.isMute, sounds.swap);\n  };\n  const handleAnswerClick = selectedAnswer => {\n    const correctOption = questions[currentQuestionIndex].correct_option;\n\n    // Map the correct option to the corresponding index (A->0, B->1, C->2, D->3)\n    const correctIndex = correctOption.charCodeAt(0) - \"A\".charCodeAt(0);\n    if (selectedAnswer === correctIndex) {\n      // Handle correct answer logic\n      if (hintUsed || clickFifty) {\n        setScore(prevScore => prevScore + 10);\n      } else {\n        setScore(prevScore => prevScore + 20);\n      }\n      setShowDudeImage(true);\n      setShowDude2Image(false);\n      setShowDude3Image(false);\n      setTimeout(() => {\n        setShowDudeImage(false);\n        setShowDude3Image(true);\n      }, 1500);\n      handleNextClick();\n      handleAudio(state.isMute, sounds.correct);\n    } else {\n      setLives(prevLives => prevLives - 1);\n      setShowDudeImage(false);\n      setShowDude2Image(true);\n      setShowDude3Image(false);\n      setTimeout(() => {\n        setShowDude2Image(false);\n        setShowDude3Image(true);\n      }, 1500);\n      handleNextClick();\n      handleAudio(state.isMute, sounds.incorrect);\n    }\n  };\n  const handleHintClick = () => {\n    setHintUsed(true); // Set hintUsed to true when the hint is clicked\n    setShowHint(true); // Show the hint\n    handleAudio(state.isMute, sounds.hint);\n    setHintCount(hintCount + 1);\n  };\n  const handleSkipClick = () => {\n    setSkipCount(skipCount + 1);\n    handleNextClick();\n    handleAudio(state.isMute, sounds.skip);\n  };\n  const createFinishTime = () => {\n    const endTime = new Date();\n    setFinishTime(formatTime(endTime - startTime));\n  };\n\n  // useEffect to navigate when finishQuiz is true\n  useEffect(() => {\n    if (finishQuiz) {\n      try {\n        navigate(\"/congrads\", {\n          state: {\n            score,\n            lives,\n            finishTime,\n            hintCount,\n            swapCount,\n            fiftyCount,\n            skipCount,\n            startTime\n          }\n        });\n      } catch (error) {\n        console.error(\"Error navigating to /congrads:\", error);\n      }\n    }\n  }, [finishQuiz, navigate, score]);\n  const handleNextClick = async () => {\n    if (currentRound === 3 && numberOfquestionsPerRound + 1 === 5) {\n      createFinishTime();\n      setFinishQuiz(true);\n    } else if (numberOfquestionsPerRound % 5 === 4) {\n      setCurrentRound(prevRound => prevRound + 1);\n      setCurrentQuestionNumber(prevNumber => prevNumber + 1);\n      setNumberOfQuestionsPerRound(0);\n      setClickFifty(false);\n      setClickSwap(false);\n      setHintUsed(false);\n      setShowHint(false);\n    } else {\n      setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n      setCurrentQuestionNumber(prevNumber => prevNumber + 1);\n      setNumberOfQuestionsPerRound(prevIndex => prevIndex + 1);\n      setHintUsed(false);\n      setShowHint(false);\n    }\n    if (lives === 1) {\n      const timeDifference = createFinishTime();\n      setGameOver(true);\n      navigate(\"/quiz\");\n    }\n    console.log(\"score:\", score);\n    console.log(\"lives:\", lives);\n  };\n  if (questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 12\n    }, this);\n  }\n  const currentQuestion = questions[currentQuestionIndex];\n  const handlePlayAgain = () => {\n    setGameOver(false);\n    setTimer(timerDuration); // Reset the timer to its initial value\n    setCurrentQuestionIndex(0); // Reset the current question index to 0 or any other initial value\n    setCurrentQuestionNumber(1);\n    setCurrentRound(1); // Reset the current round to 1 or any other initial value\n    setLives(5); // Reset the lives to their initial value\n    setShowHint(false); // Reset the hint display\n    setScore(0); // Reset the score to 0 or any other initial value\n    setHintUsed(false); // Reset the hintUsed flag\n    setShowDudeImage(false);\n    setOptions([]); // Reset the options\n    setFiftyOptions([]);\n    setClickFifty(false);\n    setStartTime(new Date());\n    fetchQuestions();\n  };\n  const handleHomePage = () => {\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      page: \"quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), !gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"round\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Round \", currentRound]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question-number\",\n        children: \"Question: \".concat(currentQuestionNumber, \"/\").concat(totalQuestions)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"questions\",\n        children: currentQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"middle\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"answers\",\n          children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"buttons\",\n              onClick: () => handleAnswerClick(index),\n              onMouseEnter: () => {\n                handleAudio(state.isMute, sounds.hover);\n              },\n              children: [optionLabel[index], \".\\xA0\", fiftyOptions.length === 2 ? fiftyOptions.includes(option) ? option : \"\" : option]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this), showDudeImage && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"dude\",\n          src: Dude,\n          alt: \"Dude\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 31\n        }, this), showDude2Image && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"dude2\",\n          src: Dude2,\n          alt: \"Dude2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 15\n        }, this), showDude3Image && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"dude3\",\n          src: Dude3,\n          alt: \"Dude3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lives\",\n        children: [\"Lives: \", Array.from({\n          length: lives\n        }, (_, index) => \"❤️\").join(\" \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"your-score\",\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"timer\",\n        children: [\"Time Left: \", Math.floor(timer / 60), \":\", (timer % 60).toString().padStart(2, \"0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this), \" \", showHint && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"hint\",\n        children: [\"Hint: \", currentQuestion.hint]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"powerUpButtons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"h-button\",\n          onClick: handleHintClick,\n          onMouseEnter: () => {\n            handleAudio(state.isMute, sounds.hover);\n          },\n          children: \"Hint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"s-button\",\n          onClick: handleSkipClick,\n          onMouseEnter: () => {\n            handleAudio(state.isMute, sounds.hover);\n          },\n          children: \"Skip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: options.length < 4 || clickFifty,\n          className: \"fifty-fifty-button\",\n          onClick: handleFiftyClick,\n          onMouseEnter: () => {\n            handleAudio(state.isMute, sounds.hover);\n          },\n          children: \"50/50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: clickSwap,\n          className: \"switch-button\",\n          onClick: handleSwapClick,\n          onMouseEnter: () => {\n            handleAudio(state.isMute, sounds.hover);\n          },\n          children: \"Swap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Final Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Time taken to complete the quiz: \", finishTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Total hints used: \", hintCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Total swap used: \", swapCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Total 50:50 used: \", fiftyCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Total skip used: \", skipCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-over-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePlayAgain,\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleHomePage,\n          children: \"Main Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 5\n  }, this);\n};\n\n// Helper function to format milliseconds into a readable time format\n_s(QuizComponent, \"cz3ueYcVpYvt0puQ17k2lJfRJwA=\", false, function () {\n  return [useNavigate];\n});\n_c = QuizComponent;\nconst formatTime = milliseconds => {\n  const seconds = Math.floor(milliseconds / 1000);\n  const minutes = Math.floor(seconds / 60);\n  return \"\".concat(minutes, \" minutes and \").concat(seconds % 60, \" seconds\");\n};\nexport default QuizComponent;\nvar _c;\n$RefreshReg$(_c, \"QuizComponent\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","Dude","Dude2","Dude3","Header","AppContext","handleAudio","sounds","axios","jsxDEV","_jsxDEV","QuizComponent","_s","navigate","state","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","currentRound","setCurrentRound","lives","setLives","showHint","setShowHint","score","setScore","hintUsed","setHintUsed","showDudeImage","setShowDudeImage","options","setOptions","fiftyOptions","setFiftyOptions","clickFifty","setClickFifty","gameOver","setGameOver","currentQuestionNumber","setCurrentQuestionNumber","totalQuestions","setTotalQuestions","swapCount","setSwapCount","hintCount","setHintCount","fiftyCount","setFiftyCount","skipCount","setSkipCount","timerDuration","clickSwap","setClickSwap","numberOfquestionsPerRound","setNumberOfQuestionsPerRound","showDude2Image","setShowDude2Image","showDude3Image","setShowDude3Image","startTime","setStartTime","timer","setTimer","finishQuiz","setFinishQuiz","finishTime","setFinishTime","optionLabel","fetchQuestions","get","concat","then","response","data","length","opts","optiona","optionb","optionc","optiond","catch","error","console","Date","timerInterval","setInterval","clearInterval","handleFiftyClick","question","correctIndex","Object","keys","find","key","correct_option","newOption","push","random","Math","floor","isMute","fifty","handleSwapClick","prevRound","prevIndex","swap","handleAnswerClick","selectedAnswer","correctOption","charCodeAt","prevScore","setTimeout","handleNextClick","correct","prevLives","incorrect","handleHintClick","hint","handleSkipClick","skip","createFinishTime","endTime","formatTime","prevNumber","timeDifference","log","children","fileName","_jsxFileName","lineNumber","columnNumber","currentQuestion","handlePlayAgain","handleHomePage","className","page","map","option","index","onClick","onMouseEnter","hover","includes","src","alt","Array","from","_","join","toString","padStart","disabled","_c","milliseconds","seconds","minutes","$RefreshReg$"],"sources":["/Users/ryanstewart/ryan/final_project/react-front-end/src/components/quiz.js"],"sourcesContent":["// quiz.js\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../style/quiz.css\";\nimport Dude from \"../asset/dude.png\";\nimport Dude2 from \"../asset/thumbs-down.png\";\nimport Dude3 from \"../asset/thinking-dude.png\";\nimport Header from \"./header\";\nimport { AppContext } from \"./AppContext\";\nimport { handleAudio, sounds } from \"./SoundHelper\";\nimport axios from 'axios'\n\nconst QuizComponent = () => {\n  const navigate = useNavigate();\n  const { state } = useContext(AppContext);\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [currentRound, setCurrentRound] = useState(1);\n  const [lives, setLives] = useState(5);\n  const [showHint, setShowHint] = useState(false);\n  const [score, setScore] = useState(0);\n  const [hintUsed, setHintUsed] = useState(false);\n  const [showDudeImage, setShowDudeImage] = useState(false); // thumbs up\n  const [options, setOptions] = useState([]);\n  const [fiftyOptions, setFiftyOptions] = useState([]);\n  const [clickFifty, setClickFifty] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [currentQuestionNumber, setCurrentQuestionNumber] = useState(1);\n  const [totalQuestions, setTotalQuestions] = useState(0);\n  const [swapCount, setSwapCount] = useState(0);\n  const [hintCount, setHintCount] = useState(0);\n  const [fiftyCount, setFiftyCount] = useState(0);\n  const [skipCount, setSkipCount] = useState(0);\n\n  const timerDuration = 300; // five minute timer\n\n  const [clickSwap, setClickSwap] = useState(false);\n  const [numberOfquestionsPerRound, setNumberOfQuestionsPerRound] = useState(0);\n  const [showDude2Image, setShowDude2Image] = useState(false); // thumbs down\n  const [showDude3Image, setShowDude3Image] = useState(true); // thinking face\n  const [startTime, setStartTime] = useState(null);\n  const [timer, setTimer] = useState(timerDuration);\n  const [finishQuiz, setFinishQuiz] = useState(false);\n\n  const [finishTime, setFinishTime] = useState('');\n\n\n  const optionLabel = {\n    0: \"A\",\n    1: \"B\",\n    2: \"C\",\n    3: \"D\",\n  };\n\n  const fetchQuestions = () => {\n    // fetch(`https://quizjs-api.onrender.com/api/questions/${currentRound}`)\n    axios.get(`/api/questions/${currentRound}`)\n      // .then((response) => {\n      //   if (!response.ok) {\n      //     throw new Error(`HTTP error! Status: ${response.status}`)\n      //   }\n      //   return response.json()\n      // })\n      .then((response) => {\n        const data = response.data\n        setQuestions(data.questions)\n        setTotalQuestions(data.questions.length)\n        const opts = [\n          data.questions[currentQuestionIndex].optiona,\n          data.questions[currentQuestionIndex].optionb,\n          data.questions[currentQuestionIndex].optionc,\n          data.questions[currentQuestionIndex].optiond\n        ]\n        setOptions(opts)\n        setFiftyOptions(opts)\n        setCurrentQuestionIndex(0)\n      })\n      .catch((error) => console.error('Error fetching questions:', error))\n  }\n\n  useEffect(() => {\n    // Fetch questions\n    fetchQuestions();\n  }, [currentRound]);\n\n  useEffect(() => {\n    // record start time\n    setStartTime(new Date());\n  }, []);\n\n  useEffect(() => {\n    const timerInterval = setInterval(() => {\n      if (timer > 0) {\n        setTimer(timer - 1);\n     } else {\n        setTimer(0); // Set timer to zero instead of going negative\n        setGameOver(true);\n     }\n     \n    }, 1000);\n\n    return () => clearInterval(timerInterval);\n  }, [timer]);\n\n  useEffect(() => {\n    if (questions.length > 0 && currentQuestionIndex < questions.length) {\n      const opts = [\n        questions[currentQuestionIndex].optiona,\n        questions[currentQuestionIndex].optionb,\n        questions[currentQuestionIndex].optionc,\n        questions[currentQuestionIndex].optiond,\n      ];\n      setOptions(opts);\n      setFiftyOptions(opts);\n    }\n  }, [currentQuestionIndex]);\n\n  const handleFiftyClick = () => {\n    const question = questions[currentQuestionIndex];\n    const correctIndex = Object.keys(optionLabel).find(\n      (key) => optionLabel[key] === question.correct_option\n    );\n    const newOption = [];\n    newOption.push(options[correctIndex]);\n    let random = Math.floor(Math.random() * 4);\n    while (random === +correctIndex) {\n      random = Math.floor(Math.random() * 4);\n    }\n\n    newOption.push(options[random]);\n    setFiftyOptions(newOption);\n    setClickFifty(true);\n    setFiftyCount(fiftyCount + 1);\n    handleAudio(state.isMute, sounds.fifty);\n  };\n\n  const handleSwapClick = () => {\n    if (numberOfquestionsPerRound + (1 % 5) === 4) {\n      setCurrentRound((prevRound) => prevRound + 1);\n      setCurrentQuestionIndex(0);\n      setNumberOfQuestionsPerRound(0);\n      setClickFifty(false);\n      setClickSwap(false);\n    } else {\n      setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\n      setClickSwap(true);\n      setSwapCount(swapCount + 1);\n    }\n    handleAudio(state.isMute, sounds.swap);\n  };\n\n  const handleAnswerClick = (selectedAnswer) => {\n    const correctOption = questions[currentQuestionIndex].correct_option;\n\n    // Map the correct option to the corresponding index (A->0, B->1, C->2, D->3)\n    const correctIndex = correctOption.charCodeAt(0) - \"A\".charCodeAt(0);\n\n    if (selectedAnswer === correctIndex) {\n      // Handle correct answer logic\n      if (hintUsed || clickFifty) {\n        setScore((prevScore) => prevScore + 10);\n      } else {\n        setScore((prevScore) => prevScore + 20);\n      }\n\n      setShowDudeImage(true);\n      setShowDude2Image(false);\n      setShowDude3Image(false);\n\n      setTimeout(() => {\n        setShowDudeImage(false);\n        setShowDude3Image(true);\n      }, 1500);\n      handleNextClick();\n      handleAudio(state.isMute, sounds.correct);\n    } else {\n      setLives((prevLives) => prevLives - 1);\n      setShowDudeImage(false);\n      setShowDude2Image(true);\n      setShowDude3Image(false);\n\n      setTimeout(() => {\n        setShowDude2Image(false);\n        setShowDude3Image(true);\n      }, 1500);\n      handleNextClick();\n      handleAudio(state.isMute, sounds.incorrect);\n    }\n  };\n\n  const handleHintClick = () => {\n    setHintUsed(true); // Set hintUsed to true when the hint is clicked\n    setShowHint(true); // Show the hint\n    handleAudio(state.isMute, sounds.hint);\n    setHintCount(hintCount + 1);\n  };\n\n  const handleSkipClick = () => {\n    setSkipCount(skipCount + 1);\n    handleNextClick();\n    handleAudio(state.isMute, sounds.skip);\n  };\n  const createFinishTime = () => {\n    const endTime = new Date();\n    setFinishTime(formatTime(endTime - startTime))\n  }\n\n  // useEffect to navigate when finishQuiz is true\n  useEffect(() => {\n    if (finishQuiz) {\n      try {\n        navigate(\"/congrads\", {\n          state: {\n            score, lives, finishTime, hintCount,\n            swapCount, fiftyCount, skipCount, startTime\n          }\n        });\n      } catch (error) {\n        console.error(\"Error navigating to /congrads:\", error);\n      }\n    }\n  }, [finishQuiz, navigate, score]);\n\n  const handleNextClick = async () => {\n    if (currentRound === 3 && numberOfquestionsPerRound + 1 === 5) {\n      createFinishTime();\n      setFinishQuiz(true);\n    } else if (numberOfquestionsPerRound % 5 === 4) {\n      setCurrentRound((prevRound) => prevRound + 1);\n      setCurrentQuestionNumber((prevNumber) => prevNumber + 1);\n      setNumberOfQuestionsPerRound(0);\n      setClickFifty(false);\n      setClickSwap(false);\n      setHintUsed(false);\n      setShowHint(false);\n    } else {\n      setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\n      setCurrentQuestionNumber((prevNumber) => prevNumber + 1);\n      setNumberOfQuestionsPerRound((prevIndex) => prevIndex + 1);\n      setHintUsed(false);\n      setShowHint(false);\n    }\n\n    if (lives === 1) {\n      const timeDifference = createFinishTime();\n      setGameOver(true);\n      navigate(\"/quiz\");\n    }\n    console.log(\"score:\", score);\n    console.log(\"lives:\", lives);\n  };\n\n  if (questions.length === 0) {\n    return <p>Loading...</p>;\n  }\n\n  const currentQuestion = questions[currentQuestionIndex];\n\n  const handlePlayAgain = () => {\n    setGameOver(false);\n    setTimer(timerDuration); // Reset the timer to its initial value\n    setCurrentQuestionIndex(0); // Reset the current question index to 0 or any other initial value\n    setCurrentQuestionNumber(1);\n    setCurrentRound(1); // Reset the current round to 1 or any other initial value\n    setLives(5); // Reset the lives to their initial value\n    setShowHint(false); // Reset the hint display\n    setScore(0); // Reset the score to 0 or any other initial value\n    setHintUsed(false); // Reset the hintUsed flag\n    setShowDudeImage(false);\n    setOptions([]); // Reset the options\n    setFiftyOptions([]);\n    setClickFifty(false);\n    setStartTime(new Date());\n    fetchQuestions();\n  };\n\n  const handleHomePage = () => {\n    navigate(\"/\");\n  };\n\n  return (\n    <div className=\"quiz-container\">\n      <Header page=\"quiz\" />\n\n      {!gameOver && (\n        <div className=\"game\">\n          <span className=\"round\">\n            <p>\n              Round {currentRound}\n            </p>\n          </span>\n          <p className=\"question-number\">{`Question: ${currentQuestionNumber}/${totalQuestions}`}</p>\n          <p className=\"questions\">{currentQuestion.question}</p>\n          <div className=\"middle\">\n            <ul className=\"answers\">\n              {options.map((option, index) => (\n                <li key={index}>\n                  <button\n                    className=\"buttons\"\n                    onClick={() => handleAnswerClick(index)}\n                    onMouseEnter={() => {\n                      handleAudio(state.isMute, sounds.hover);\n                    }}\n                  >\n                    {optionLabel[index]}.&nbsp;\n                    {fiftyOptions.length === 2\n                      ? fiftyOptions.includes(option)\n                        ? option\n                        : \"\"\n                      : option}\n                  </button>\n                </li>\n              ))}\n            </ul>\n            {showDudeImage && <img className=\"dude\" src={Dude} alt=\"Dude\" />}\n            {showDude2Image && (\n              <img className=\"dude2\" src={Dude2} alt=\"Dude2\" />\n            )}\n            {showDude3Image && (\n              <img className=\"dude3\" src={Dude3} alt=\"Dude3\" />\n            )}\n          </div>\n          <p className=\"lives\">\n            Lives: {Array.from({ length: lives }, (_, index) => \"❤️\").join(\" \")}\n          </p>\n          <p className=\"your-score\">Score: {score}</p>\n          <p className=\"timer\">\n            Time Left: {Math.floor(timer / 60)}:\n            {(timer % 60).toString().padStart(2, \"0\")}\n          </p>{\" \"}\n          {showHint && <p className=\"hint\">Hint: {currentQuestion.hint}</p>}\n          <div className=\"powerUpButtons\">\n            <button\n              className=\"h-button\"\n              onClick={handleHintClick}\n              onMouseEnter={() => {\n                handleAudio(state.isMute, sounds.hover);\n              }}\n            >\n              Hint\n            </button>\n            <button\n              className=\"s-button\"\n              onClick={handleSkipClick}\n              onMouseEnter={() => {\n                handleAudio(state.isMute, sounds.hover);\n              }}\n            >\n              Skip\n            </button>\n            <button\n              disabled={options.length < 4 || clickFifty}\n              className=\"fifty-fifty-button\"\n              onClick={handleFiftyClick}\n              onMouseEnter={() => {\n                handleAudio(state.isMute, sounds.hover);\n              }}\n            >\n              50/50\n            </button>\n            <button\n              disabled={clickSwap}\n              className=\"switch-button\"\n              onClick={handleSwapClick}\n              onMouseEnter={() => {\n                handleAudio(state.isMute, sounds.hover);\n              }}\n            >\n              Swap\n            </button>\n          </div>\n        </div>\n      )}\n\n      {gameOver && (\n        <div className=\"game-over-popup\">\n          <h1>Game Over!</h1>\n          <li>Final Score: {score}</li>\n          <li>Time taken to complete the quiz: {finishTime}</li>\n          <li>Total hints used: {hintCount}</li>\n          <li>Total swap used: {swapCount}</li>\n          <li>Total 50:50 used: {fiftyCount}</li>\n          <li>Total skip used: {skipCount}</li>\n          <div className=\"game-over-buttons\">\n            <button onClick={handlePlayAgain}>Play Again</button>\n            <button onClick={handleHomePage}>Main Page</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Helper function to format milliseconds into a readable time format\nconst formatTime = (milliseconds) => {\n  const seconds = Math.floor(milliseconds / 1000);\n  const minutes = Math.floor(seconds / 60);\n  return `${minutes} minutes and ${seconds % 60} seconds`;\n};\n\nexport default QuizComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}