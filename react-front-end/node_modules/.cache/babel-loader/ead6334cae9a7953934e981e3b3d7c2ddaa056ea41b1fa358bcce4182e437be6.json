{"ast":null,"code":"var _jsxFileName = \"/Users/ryanstewart/ryan/final_project/react-front-end/src/components/congrads.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport '../style/congrads.css';\nimport '../style/App.css';\nimport 'whatwg-fetch';\nimport Header from './header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Congrats = _ref => {\n  _s();\n  let {\n    onLeaderboardUpdate\n  } = _ref;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [completionTime, setCompletionTime] = useState(null);\n  useEffect(() => {\n    if (location.state) {\n      const startTime = location.state.startTime;\n      const endTime = new Date();\n      const timeDifference = endTime - startTime;\n      setCompletionTime(timeDifference);\n    }\n  }, [location.state]);\n\n  // State variables for form fields\n  const [submissionMessage, setSubmissionMessage] = useState('');\n  const [name, setName] = useState('');\n  const [nicknameError, setNicknameError] = useState('');\n\n  // Access the score from the location state\n  const score = location.state && location.state.score;\n  const lives = location.state && location.state.lives;\n  const finishTime = location.state && location.state.finishTime;\n  const hintCount = location.state && location.state.hintCount;\n  const swapCount = location.state && location.state.swapCount;\n  const fiftyCount = location.state && location.state.fiftyCount;\n  const skipCount = location.state && location.state.skipCount;\n\n  // Function to validate the nickname\n  const validateNickname = async nickname => {\n    try {\n      const response = await fetch('/validate-nickname', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          nickname\n        })\n      });\n\n      // Process the server response\n      const result = await response.json();\n      return result;\n    } catch (error) {\n      console.error('Error validating nickname:', error);\n      return {\n        success: false,\n        error: 'Failed to validate nickname'\n      };\n    }\n  };\n\n  // Function to handle form submission\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // Trim leading and trailing whitespace\n    const trimmedName = name.trim();\n\n    // Client-side validation for nickname\n    if (trimmedName.length < 3 || trimmedName.length > 12) {\n      setNicknameError('Nickname must be between 3 and 12 characters');\n      return;\n    } else {\n      setNicknameError('');\n    }\n    if (!/^[0-9A-Z]+$/i.test(trimmedName)) {\n      setNicknameError('Nickname must contain only numbers and characters A-Z');\n      return;\n    } else {\n      setNicknameError('');\n    }\n    if (!name || /^\\s*$/.test(trimmedName)) {\n      setNicknameError('Nickname cannot be empty or contain only whitespace');\n      return;\n    } else {\n      setNicknameError('');\n    }\n\n    // Validate the nickname on the server\n    const nicknameValidation = await validateNickname(name);\n\n    // Check server-side validation result\n    if (!nicknameValidation.success) {\n      // Handle validation error, show error message to the user\n      console.error('Nickname validation failed:', nicknameValidation.error);\n      // Update state or show error message to the user\n      setNicknameError('Nickname validation failed');\n      return;\n    }\n    console.log('Submitted:', {\n      name,\n      score,\n      completionTime\n    });\n\n    // Send data to the server\n    try {\n      const response = await fetch('/api/high-scores', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          score,\n          completionTime\n        }) // add completionTime here\n      });\n\n      // Handling the server response\n      if (response.ok) {\n        setSubmissionMessage('Your score has been submitted successfully');\n        console.log('Score submitted successfully');\n        // Optionally, you can update the state or perform other actions here\n        onLeaderboardUpdate();\n        navigate('/');\n      } else {\n        setSubmissionMessage('Failed to submit score');\n        console.error('Failed to submit score');\n      }\n    } catch (error) {\n      setSubmissionMessage('Error submitting score');\n      console.error('Error submitting score:', error);\n    }\n  };\n  console.log('time:', completionTime);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"div-style\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: \"Congratulations!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"on\",\n          children: \"ON\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"completing\",\n          children: \"COMPLETING\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Header, {\n          page: \"congrads\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Your game stats:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"final-score\",\n              children: [\"Your final score: \", score]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"final-lives\",\n              children: [\"Your final lives: \", lives]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"final-hints\",\n              children: [\"Amount of hints used: \", hintCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"final-swap\",\n              children: [\"Amount of swaps used: \", swapCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"final-fifty\",\n              children: [\"Amount of 50:50s used: \", fiftyCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"final-skip\",\n              children: [\"Amount of skips used: \", skipCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"final-time\",\n              children: [\"Completion Time: \", finishTime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"myForm\",\n          onSubmit: handleSubmit,\n          children: [submissionMessage && /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: submissionMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"name\",\n            children: [\"Enter your nickname:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 11\n            }, this), nicknameError && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: nicknameError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(Congrats, \"CnQeqAbPbvFVCrN7WzmIZu9APMA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Congrats;\nCongrats.propTypes = {\n  onLeaderboardUpdate: PropTypes.func.isRequired\n};\nexport default Congrats;\nvar _c;\n$RefreshReg$(_c, \"Congrats\");","map":{"version":3,"names":["React","useEffect","useState","PropTypes","useNavigate","useLocation","Header","jsxDEV","_jsxDEV","Congrats","_ref","_s","onLeaderboardUpdate","navigate","location","completionTime","setCompletionTime","state","startTime","endTime","Date","timeDifference","submissionMessage","setSubmissionMessage","name","setName","nicknameError","setNicknameError","score","lives","finishTime","hintCount","swapCount","fiftyCount","skipCount","validateNickname","nickname","response","fetch","method","headers","body","JSON","stringify","result","json","error","console","success","handleSubmit","event","preventDefault","trimmedName","trim","length","test","nicknameValidation","log","ok","className","children","fileName","_jsxFileName","lineNumber","columnNumber","page","onSubmit","type","value","onChange","e","target","_c","propTypes","func","isRequired","$RefreshReg$"],"sources":["/Users/ryanstewart/ryan/final_project/react-front-end/src/components/congrads.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport '../style/congrads.css'\nimport '../style/App.css'\nimport 'whatwg-fetch'\nimport Header from './header'\n\nconst Congrats = ({ onLeaderboardUpdate }) => {\n  const navigate = useNavigate()\n  const location = useLocation()\n\n  const [completionTime, setCompletionTime] = useState(null)\n  useEffect(() => {\n    if (location.state) {\n      const startTime = location.state.startTime\n      const endTime = new Date()\n      const timeDifference = endTime - startTime\n      setCompletionTime(timeDifference)\n    }\n  }, [location.state])\n\n  // State variables for form fields\n  const [submissionMessage, setSubmissionMessage] = useState('')\n  const [name, setName] = useState('')\n  const [nicknameError, setNicknameError] = useState('')\n\n  // Access the score from the location state\n  const score = location.state && location.state.score\n  const lives = location.state && location.state.lives\n  const finishTime = location.state && location.state.finishTime\n  const hintCount = location.state && location.state.hintCount\n  const swapCount = location.state && location.state.swapCount\n  const fiftyCount = location.state && location.state.fiftyCount\n  const skipCount = location.state && location.state.skipCount\n\n  // Function to validate the nickname\n  const validateNickname = async (nickname) => {\n    try {\n      const response = await fetch('/validate-nickname', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ nickname })\n      })\n\n      // Process the server response\n      const result = await response.json()\n      return result\n    } catch (error) {\n      console.error('Error validating nickname:', error)\n      return { success: false, error: 'Failed to validate nickname' }\n    }\n  }\n\n  // Function to handle form submission\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n\n    // Trim leading and trailing whitespace\n    const trimmedName = name.trim()\n\n    // Client-side validation for nickname\n    if (trimmedName.length < 3 || trimmedName.length > 12) {\n      setNicknameError('Nickname must be between 3 and 12 characters')\n      return\n    } else {\n      setNicknameError('')\n    }\n\n    if (!/^[0-9A-Z]+$/i.test(trimmedName)) {\n      setNicknameError('Nickname must contain only numbers and characters A-Z')\n      return\n    } else {\n      setNicknameError('')\n    }\n\n    if (!name || /^\\s*$/.test(trimmedName)) {\n      setNicknameError('Nickname cannot be empty or contain only whitespace')\n      return\n    } else {\n      setNicknameError('')\n    }\n\n    // Validate the nickname on the server\n    const nicknameValidation = await validateNickname(name)\n\n    // Check server-side validation result\n    if (!nicknameValidation.success) {\n      // Handle validation error, show error message to the user\n      console.error('Nickname validation failed:', nicknameValidation.error)\n      // Update state or show error message to the user\n      setNicknameError('Nickname validation failed')\n      return\n    }\n\n    console.log('Submitted:', { name, score, completionTime })\n\n    // Send data to the server\n    try {\n      const response = await fetch('/api/high-scores', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ name, score, completionTime }) // add completionTime here\n      })\n\n      // Handling the server response\n      if (response.ok) {\n        setSubmissionMessage('Your score has been submitted successfully')\n        console.log('Score submitted successfully')\n        // Optionally, you can update the state or perform other actions here\n        onLeaderboardUpdate()\n        navigate('/')\n      } else {\n        setSubmissionMessage('Failed to submit score')\n        console.error('Failed to submit score')\n      }\n    } catch (error) {\n      setSubmissionMessage('Error submitting score')\n      console.error('Error submitting score:', error)\n    }\n  }\n\n  console.log('time:', completionTime)\n\n  return (\n    <div className=\"div-style\">\n    <div className=\"container\">\n      <div className=\"top\">\n      <h1 className=\"title\">Congratulations!</h1>\n      <h2 className=\"on\">ON</h2>\n      <h2 className=\"completing\">COMPLETING</h2>\n      <Header page=\"congrads\" />\n      </div>\n      <div className=\"bottom\">\n<div className=\"stats-box\">\n        <h1>Your game stats:</h1>\n        <ul className=\"stats\">\n          <li className=\"final-score\">Your final score: {score}</li>\n          <li className=\"final-lives\">Your final lives: {lives}</li>\n          <li className=\"final-hints\">Amount of hints used: {hintCount}</li>\n          <li className=\"final-swap\">Amount of swaps used: {swapCount}</li>\n          <li className=\"final-fifty\">Amount of 50:50s used: {fiftyCount}</li>\n          <li className=\"final-skip\">Amount of skips used: {skipCount}</li>\n          <li className=\"final-time\">Completion Time: {finishTime}</li>\n        </ul>\n        </div>\n      <form className=\"myForm\" onSubmit={handleSubmit}>\n        {submissionMessage && <h2>{submissionMessage}</h2>}\n\n        <label className=\"name\">\n          Enter your nickname:\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n          {nicknameError && <p className=\"error\">{nicknameError}</p>}\n        </label>\n\n        <button className=\"submit\" type=\"submit\">\n          Submit\n        </button>\n      </form>\n      </div>\n    </div>\n    </div>\n  )\n}\n\nCongrats.propTypes = {\n  onLeaderboardUpdate: PropTypes.func.isRequired\n}\n\nexport default Congrats\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}