{"ast":null,"code":"var _jsxFileName = \"/Users/ryanstewart/ryan/final_project/react-front-end/src/components/quiz.js\",\n  _s = $RefreshSig$();\n// quiz.js\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../style/quiz.css';\nimport Dude from '../asset/dude.png';\nimport Dude2 from '../asset/thumbs-down.png';\nimport Dude3 from '../asset/thinking-dude.png';\nimport Header from './header';\nimport { AppContext } from './AppContext';\nimport { handleAudio, sounds } from './SoundHelper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizComponent = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    state\n  } = useContext(AppContext);\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [currentRound, setCurrentRound] = useState(1);\n  const [lives, setLives] = useState(5);\n  const [showHint, setShowHint] = useState(false);\n  const [score, setScore] = useState(0);\n  const [hintUsed, setHintUsed] = useState(false);\n  const [showDudeImage, setShowDudeImage] = useState(false); // thumbs up\n  const [options, setOptions] = useState([]);\n  const [fiftyOptions, setFiftyOptions] = useState([]);\n  const [clickFifty, setClickFifty] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [currentQuestionNumber, setCurrentQuestionNumber] = useState(1);\n  const [totalQuestions, setTotalQuestions] = useState(0);\n  const [swapCount, setSwapCount] = useState(0);\n  const [hintCount, setHintCount] = useState(0);\n  const [fiftyCount, setFiftyCount] = useState(0);\n  const [skipCount, setSkipCount] = useState(0);\n  const timerDuration = 300; // five minute timer\n\n  const [clickSwap, setClickSwap] = useState(false);\n  const [numberOfquestionsPerRound, setNumberOfQuestionsPerRound] = useState(0);\n  const [showDude2Image, setShowDude2Image] = useState(false); // thumbs down\n  const [showDude3Image, setShowDude3Image] = useState(true); // thinking face\n  const [startTime, setStartTime] = useState(null);\n  const [timer, setTimer] = useState(timerDuration);\n  const [finishQuiz, setFinishQuiz] = useState(false);\n  const [finishTime, setFinishTime] = useState(null);\n  const optionLabel = {\n    0: 'A',\n    1: 'B',\n    2: 'C',\n    3: 'D'\n  };\n  const fetchQuestions = () => {\n    fetch(\"https://quizjs-api.onrender.com/api/questions/\".concat(currentRound)).then(response => {\n      if (!response.ok) {\n        throw new Error(\"HTTP error! Status: \".concat(response.status));\n      }\n      return response.json();\n    }).then(data => {\n      setQuestions(data.questions);\n      setTotalQuestions(data.questions.length);\n      const opts = [data.questions[currentQuestionIndex].optiona, data.questions[currentQuestionIndex].optionb, data.questions[currentQuestionIndex].optionc, data.questions[currentQuestionIndex].optiond];\n      setOptions(opts);\n      setFiftyOptions(opts);\n      setCurrentQuestionIndex(0);\n    }).catch(error => console.error('Error fetching questions:', error));\n  };\n  useEffect(() => {\n    // Fetch questions\n    fetchQuestions();\n  }, [currentRound]);\n  useEffect(() => {\n    // record start time\n    setStartTime(new Date());\n  }, []);\n  useEffect(() => {\n    const timerInterval = setInterval(() => {\n      if (timer > 0) {\n        setTimer(timer - 1);\n      } else {\n        setGameOver(true);\n      }\n    }, 1000);\n    return () => clearInterval(timerInterval);\n  }, [timer]);\n  useEffect(() => {\n    if (questions.length > 0 && currentQuestionIndex < questions.length) {\n      const opts = [questions[currentQuestionIndex].optiona, questions[currentQuestionIndex].optionb, questions[currentQuestionIndex].optionc, questions[currentQuestionIndex].optiond];\n      setOptions(opts);\n      setFiftyOptions(opts);\n    }\n  }, [currentQuestionIndex]);\n  const handleFiftyClick = () => {\n    const question = questions[currentQuestionIndex];\n    const correctIndex = Object.keys(optionLabel).find(key => optionLabel[key] === question.correct_option);\n    const newOption = [];\n    newOption.push(options[correctIndex]);\n    let random = Math.floor(Math.random() * 4);\n    while (random === +correctIndex) {\n      random = Math.floor(Math.random() * 4);\n    }\n    newOption.push(options[random]);\n    setFiftyOptions(newOption);\n    setClickFifty(true);\n    setFiftyCount(fiftyCount + 1);\n    handleAudio(state.isMute, sounds.fifty);\n  };\n  const handleSwapClick = () => {\n    if (numberOfquestionsPerRound + 1 % 5 === 4) {\n      setCurrentRound(prevRound => prevRound + 1);\n      setCurrentQuestionIndex(0);\n      setNumberOfQuestionsPerRound(0);\n      setClickFifty(false);\n      setClickSwap(false);\n    } else {\n      setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n      setClickSwap(true);\n      setSwapCount(swapCount + 1);\n    }\n    handleAudio(state.isMute, sounds.swap);\n  };\n  const handleAnswerClick = selectedAnswer => {\n    const correctOption = questions[currentQuestionIndex].correct_option;\n\n    // Map the correct option to the corresponding index (A->0, B->1, C->2, D->3)\n    const correctIndex = correctOption.charCodeAt(0) - 'A'.charCodeAt(0);\n    if (selectedAnswer === correctIndex) {\n      // Handle correct answer logic\n      if (hintUsed || clickFifty) {\n        setScore(prevScore => prevScore + 10);\n      } else {\n        setScore(prevScore => prevScore + 20);\n      }\n      setShowDudeImage(true);\n      setShowDude2Image(false);\n      setShowDude3Image(false);\n      setTimeout(() => {\n        setShowDudeImage(false);\n        setShowDude3Image(true);\n      }, 1500);\n      handleNextClick();\n      handleAudio(state.isMute, sounds.correct);\n    } else {\n      setLives(prevLives => prevLives - 1);\n      setShowDudeImage(false);\n      setShowDude2Image(true);\n      setShowDude3Image(false);\n      setTimeout(() => {\n        setShowDude2Image(false);\n        setShowDude3Image(true);\n      }, 1500);\n      handleNextClick();\n      handleAudio(state.isMute, sounds.incorrect);\n    }\n  };\n  const handleHintClick = () => {\n    setHintUsed(true); // Set hintUsed to true when the hint is clicked\n    setShowHint(true); // Show the hint\n    handleAudio(state.isMute, sounds.hint);\n    setHintCount(hintCount + 1);\n  };\n  const handleSkipClick = () => {\n    setSkipCount(skipCount + 1);\n    handleNextClick();\n    handleAudio(state.isMute, sounds.skip);\n  };\n  const createFinishTime = () => {\n    const endTime = new Date();\n    setFinishTime(formatTime(endTime - startTime));\n  };\n\n  // useEffect to navigate when finishQuiz is true\n  useEffect(() => {\n    if (finishQuiz) {\n      try {\n        navigate('/congrads', {\n          state: {\n            score,\n            lives,\n            finishTime,\n            hintCount,\n            swapCount,\n            fiftyCount,\n            skipCount,\n            startTime\n          }\n        });\n      } catch (error) {\n        console.error('Error navigating to /congrads:', error);\n      }\n    }\n  }, [finishQuiz, navigate, score]);\n  const handleNextClick = async () => {\n    if (currentRound === 3 && numberOfquestionsPerRound + 1 === 5) {\n      createFinishTime();\n      setFinishQuiz(true);\n    } else if (numberOfquestionsPerRound % 5 === 4) {\n      setCurrentRound(prevRound => prevRound + 1);\n      setCurrentQuestionNumber(prevNumber => prevNumber + 1);\n      setNumberOfQuestionsPerRound(0);\n      setClickFifty(false);\n      setClickSwap(false);\n      setHintUsed(false);\n      setShowHint(false);\n    } else {\n      setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n      setCurrentQuestionNumber(prevNumber => prevNumber + 1);\n      setNumberOfQuestionsPerRound(prevIndex => prevIndex + 1);\n      setHintUsed(false);\n      setShowHint(false);\n    }\n    if (lives === 1) {\n      // const timeDifference = createFinishTime()\n      setGameOver(true);\n      navigate('/quiz');\n    }\n    console.log('score:', score);\n    console.log('lives:', lives);\n  };\n  if (questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 12\n    }, this);\n  }\n  const currentQuestion = questions[currentQuestionIndex];\n  const handlePlayAgain = () => {\n    setGameOver(false);\n    setTimer(timerDuration); // Reset the timer to its initial value\n    setCurrentQuestionIndex(0); // Reset the current question index to 0 or any other initial value\n    setCurrentQuestionNumber(1);\n    setCurrentRound(1); // Reset the current round to 1 or any other initial value\n    setLives(5); // Reset the lives to their initial value\n    setShowHint(false); // Reset the hint display\n    setScore(0); // Reset the score to 0 or any other initial value\n    setHintUsed(false); // Reset the hintUsed flag\n    setShowDudeImage(false);\n    setOptions([]); // Reset the options\n    setFiftyOptions([]);\n    setClickFifty(false);\n    setStartTime(new Date());\n    fetchQuestions();\n  };\n  const handleHomePage = () => {\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      page: \"quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), !gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"round\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Round \", currentRound]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question-number\",\n        children: \"Question: \".concat(currentQuestionNumber, \"/\").concat(totalQuestions)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"questions\",\n        children: currentQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"middle\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"answers\",\n          children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"buttons\",\n              onClick: () => handleAnswerClick(index),\n              onMouseEnter: () => {\n                handleAudio(state.isMute, sounds.hover);\n              },\n              children: [optionLabel[index], \".\\xA0\", fiftyOptions.length === 2 ? fiftyOptions.includes(option) ? option : '' : option]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this), showDudeImage && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"dude\",\n          src: Dude,\n          alt: \"Dude\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 31\n        }, this), showDude2Image && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"dude2\",\n          src: Dude2,\n          alt: \"Dude2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 15\n        }, this), showDude3Image && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"dude3\",\n          src: Dude3,\n          alt: \"Dude3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lives\",\n        children: [\"Lives: \", Array.from({\n          length: lives\n        }, (_, index) => '❤️').join(' ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"your-score\",\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"timer\",\n        children: [\"Time Left: \", Math.floor(timer / 60), \":\", (timer % 60).toString().padStart(2, '0')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this), ' ', showHint && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"hint\",\n        children: [\"Hint: \", currentQuestion.hint]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"powerUpButtons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"h-button\",\n          onClick: handleHintClick,\n          onMouseEnter: () => {\n            handleAudio(state.isMute, sounds.hover);\n          },\n          children: \"Hint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"s-button\",\n          onClick: handleSkipClick,\n          onMouseEnter: () => {\n            handleAudio(state.isMute, sounds.hover);\n          },\n          children: \"Skip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: options.length < 4 || clickFifty,\n          className: \"fifty-fifty-button\",\n          onClick: handleFiftyClick,\n          onMouseEnter: () => {\n            handleAudio(state.isMute, sounds.hover);\n          },\n          children: \"50/50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: clickSwap,\n          className: \"switch-button\",\n          onClick: handleSwapClick,\n          onMouseEnter: () => {\n            handleAudio(state.isMute, sounds.hover);\n          },\n          children: \"Swap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Final Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Time taken to complete the quiz: \", finishTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Total hints used: \", hintCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Total swap used: \", swapCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Total 50:50 used: \", fiftyCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Total skip used: \", skipCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-over-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePlayAgain,\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleHomePage,\n          children: \"Main Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 5\n  }, this);\n};\n\n// Helper function to format milliseconds into a readable time format\n_s(QuizComponent, \"nGpwhlc2SAvo1zOOY02YDTdqbmU=\", false, function () {\n  return [useNavigate];\n});\n_c = QuizComponent;\nconst formatTime = milliseconds => {\n  const seconds = Math.floor(milliseconds / 1000);\n  const minutes = Math.floor(seconds / 60);\n  return \"\".concat(minutes, \" minutes and \").concat(seconds % 60, \" seconds\");\n};\nexport default QuizComponent;\nvar _c;\n$RefreshReg$(_c, \"QuizComponent\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","Dude","Dude2","Dude3","Header","AppContext","handleAudio","sounds","jsxDEV","_jsxDEV","QuizComponent","_s","navigate","state","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","currentRound","setCurrentRound","lives","setLives","showHint","setShowHint","score","setScore","hintUsed","setHintUsed","showDudeImage","setShowDudeImage","options","setOptions","fiftyOptions","setFiftyOptions","clickFifty","setClickFifty","gameOver","setGameOver","currentQuestionNumber","setCurrentQuestionNumber","totalQuestions","setTotalQuestions","swapCount","setSwapCount","hintCount","setHintCount","fiftyCount","setFiftyCount","skipCount","setSkipCount","timerDuration","clickSwap","setClickSwap","numberOfquestionsPerRound","setNumberOfQuestionsPerRound","showDude2Image","setShowDude2Image","showDude3Image","setShowDude3Image","startTime","setStartTime","timer","setTimer","finishQuiz","setFinishQuiz","finishTime","setFinishTime","optionLabel","fetchQuestions","fetch","concat","then","response","ok","Error","status","json","data","length","opts","optiona","optionb","optionc","optiond","catch","error","console","Date","timerInterval","setInterval","clearInterval","handleFiftyClick","question","correctIndex","Object","keys","find","key","correct_option","newOption","push","random","Math","floor","isMute","fifty","handleSwapClick","prevRound","prevIndex","swap","handleAnswerClick","selectedAnswer","correctOption","charCodeAt","prevScore","setTimeout","handleNextClick","correct","prevLives","incorrect","handleHintClick","hint","handleSkipClick","skip","createFinishTime","endTime","formatTime","prevNumber","log","children","fileName","_jsxFileName","lineNumber","columnNumber","currentQuestion","handlePlayAgain","handleHomePage","className","page","map","option","index","onClick","onMouseEnter","hover","includes","src","alt","Array","from","_","join","toString","padStart","disabled","_c","milliseconds","seconds","minutes","$RefreshReg$"],"sources":["/Users/ryanstewart/ryan/final_project/react-front-end/src/components/quiz.js"],"sourcesContent":["// quiz.js\nimport React, { useState, useEffect, useContext } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport '../style/quiz.css'\nimport Dude from '../asset/dude.png'\nimport Dude2 from '../asset/thumbs-down.png'\nimport Dude3 from '../asset/thinking-dude.png'\nimport Header from './header'\nimport { AppContext } from './AppContext'\nimport { handleAudio, sounds } from './SoundHelper'\n\nconst QuizComponent = () => {\n  const navigate = useNavigate()\n  const { state } = useContext(AppContext)\n  const [questions, setQuestions] = useState([])\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0)\n  const [currentRound, setCurrentRound] = useState(1)\n  const [lives, setLives] = useState(5)\n  const [showHint, setShowHint] = useState(false)\n  const [score, setScore] = useState(0)\n  const [hintUsed, setHintUsed] = useState(false)\n  const [showDudeImage, setShowDudeImage] = useState(false) // thumbs up\n  const [options, setOptions] = useState([])\n  const [fiftyOptions, setFiftyOptions] = useState([])\n  const [clickFifty, setClickFifty] = useState(false)\n  const [gameOver, setGameOver] = useState(false)\n  const [currentQuestionNumber, setCurrentQuestionNumber] = useState(1)\n  const [totalQuestions, setTotalQuestions] = useState(0)\n  const [swapCount, setSwapCount] = useState(0)\n  const [hintCount, setHintCount] = useState(0)\n  const [fiftyCount, setFiftyCount] = useState(0)\n  const [skipCount, setSkipCount] = useState(0)\n\n  const timerDuration = 300 // five minute timer\n\n  const [clickSwap, setClickSwap] = useState(false)\n  const [numberOfquestionsPerRound, setNumberOfQuestionsPerRound] = useState(0)\n  const [showDude2Image, setShowDude2Image] = useState(false) // thumbs down\n  const [showDude3Image, setShowDude3Image] = useState(true) // thinking face\n  const [startTime, setStartTime] = useState(null)\n  const [timer, setTimer] = useState(timerDuration)\n  const [finishQuiz, setFinishQuiz] = useState(false)\n\n  const [finishTime, setFinishTime] = useState(null)\n\n  const optionLabel = {\n    0: 'A',\n    1: 'B',\n    2: 'C',\n    3: 'D'\n  }\n\n  const fetchQuestions = () => {\n    fetch(`https://quizjs-api.onrender.com/api/questions/${currentRound}`)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`)\n        }\n        return response.json()\n      })\n      .then((data) => {\n        setQuestions(data.questions)\n        setTotalQuestions(data.questions.length)\n        const opts = [\n          data.questions[currentQuestionIndex].optiona,\n          data.questions[currentQuestionIndex].optionb,\n          data.questions[currentQuestionIndex].optionc,\n          data.questions[currentQuestionIndex].optiond\n        ]\n        setOptions(opts)\n        setFiftyOptions(opts)\n        setCurrentQuestionIndex(0)\n      })\n      .catch((error) => console.error('Error fetching questions:', error))\n  }\n\n  useEffect(() => {\n    // Fetch questions\n    fetchQuestions()\n  }, [currentRound])\n\n  useEffect(() => {\n    // record start time\n    setStartTime(new Date())\n  }, [])\n\n  useEffect(() => {\n    const timerInterval = setInterval(() => {\n      if (timer > 0) {\n        setTimer(timer - 1)\n      } else {\n        setGameOver(true)\n      }\n    }, 1000)\n\n    return () => clearInterval(timerInterval)\n  }, [timer])\n\n  useEffect(() => {\n    if (questions.length > 0 && currentQuestionIndex < questions.length) {\n      const opts = [\n        questions[currentQuestionIndex].optiona,\n        questions[currentQuestionIndex].optionb,\n        questions[currentQuestionIndex].optionc,\n        questions[currentQuestionIndex].optiond\n      ]\n      setOptions(opts)\n      setFiftyOptions(opts)\n    }\n  }, [currentQuestionIndex])\n\n  const handleFiftyClick = () => {\n    const question = questions[currentQuestionIndex]\n    const correctIndex = Object.keys(optionLabel).find(\n      (key) => optionLabel[key] === question.correct_option\n    )\n    const newOption = []\n    newOption.push(options[correctIndex])\n    let random = Math.floor(Math.random() * 4)\n    while (random === +correctIndex) {\n      random = Math.floor(Math.random() * 4)\n    }\n\n    newOption.push(options[random])\n    setFiftyOptions(newOption)\n    setClickFifty(true)\n    setFiftyCount(fiftyCount + 1)\n    handleAudio(state.isMute, sounds.fifty)\n  }\n\n  const handleSwapClick = () => {\n    if (numberOfquestionsPerRound + (1 % 5) === 4) {\n      setCurrentRound((prevRound) => prevRound + 1)\n      setCurrentQuestionIndex(0)\n      setNumberOfQuestionsPerRound(0)\n      setClickFifty(false)\n      setClickSwap(false)\n    } else {\n      setCurrentQuestionIndex((prevIndex) => prevIndex + 1)\n      setClickSwap(true)\n      setSwapCount(swapCount + 1)\n    }\n    handleAudio(state.isMute, sounds.swap)\n  }\n\n  const handleAnswerClick = (selectedAnswer) => {\n    const correctOption = questions[currentQuestionIndex].correct_option\n\n    // Map the correct option to the corresponding index (A->0, B->1, C->2, D->3)\n    const correctIndex = correctOption.charCodeAt(0) - 'A'.charCodeAt(0)\n\n    if (selectedAnswer === correctIndex) {\n      // Handle correct answer logic\n      if (hintUsed || clickFifty) {\n        setScore((prevScore) => prevScore + 10)\n      } else {\n        setScore((prevScore) => prevScore + 20)\n      }\n\n      setShowDudeImage(true)\n      setShowDude2Image(false)\n      setShowDude3Image(false)\n\n      setTimeout(() => {\n        setShowDudeImage(false)\n        setShowDude3Image(true)\n      }, 1500)\n      handleNextClick()\n      handleAudio(state.isMute, sounds.correct)\n    } else {\n      setLives((prevLives) => prevLives - 1)\n      setShowDudeImage(false)\n      setShowDude2Image(true)\n      setShowDude3Image(false)\n\n      setTimeout(() => {\n        setShowDude2Image(false)\n        setShowDude3Image(true)\n      }, 1500)\n      handleNextClick()\n      handleAudio(state.isMute, sounds.incorrect)\n    }\n  }\n\n  const handleHintClick = () => {\n    setHintUsed(true) // Set hintUsed to true when the hint is clicked\n    setShowHint(true) // Show the hint\n    handleAudio(state.isMute, sounds.hint)\n    setHintCount(hintCount + 1)\n  }\n\n  const handleSkipClick = () => {\n    setSkipCount(skipCount + 1)\n    handleNextClick()\n    handleAudio(state.isMute, sounds.skip)\n  }\n  const createFinishTime = () => {\n    const endTime = new Date()\n    setFinishTime(formatTime(endTime - startTime))\n  }\n\n  // useEffect to navigate when finishQuiz is true\n  useEffect(() => {\n    if (finishQuiz) {\n      try {\n        navigate('/congrads', {\n          state: {\n            score,\n            lives,\n            finishTime,\n            hintCount,\n            swapCount,\n            fiftyCount,\n            skipCount,\n            startTime\n          }\n        })\n      } catch (error) {\n        console.error('Error navigating to /congrads:', error)\n      }\n    }\n  }, [finishQuiz, navigate, score])\n\n  const handleNextClick = async () => {\n    if (currentRound === 3 && numberOfquestionsPerRound + 1 === 5) {\n      createFinishTime()\n      setFinishQuiz(true)\n    } else if (numberOfquestionsPerRound % 5 === 4) {\n      setCurrentRound((prevRound) => prevRound + 1)\n      setCurrentQuestionNumber((prevNumber) => prevNumber + 1)\n      setNumberOfQuestionsPerRound(0)\n      setClickFifty(false)\n      setClickSwap(false)\n      setHintUsed(false)\n      setShowHint(false)\n    } else {\n      setCurrentQuestionIndex((prevIndex) => prevIndex + 1)\n      setCurrentQuestionNumber((prevNumber) => prevNumber + 1)\n      setNumberOfQuestionsPerRound((prevIndex) => prevIndex + 1)\n      setHintUsed(false)\n      setShowHint(false)\n    }\n\n    if (lives === 1) {\n      // const timeDifference = createFinishTime()\n      setGameOver(true)\n      navigate('/quiz')\n    }\n    console.log('score:', score)\n    console.log('lives:', lives)\n  }\n\n  if (questions.length === 0) {\n    return <p>Loading...</p>\n  }\n\n  const currentQuestion = questions[currentQuestionIndex]\n\n  const handlePlayAgain = () => {\n    setGameOver(false)\n    setTimer(timerDuration) // Reset the timer to its initial value\n    setCurrentQuestionIndex(0) // Reset the current question index to 0 or any other initial value\n    setCurrentQuestionNumber(1)\n    setCurrentRound(1) // Reset the current round to 1 or any other initial value\n    setLives(5) // Reset the lives to their initial value\n    setShowHint(false) // Reset the hint display\n    setScore(0) // Reset the score to 0 or any other initial value\n    setHintUsed(false) // Reset the hintUsed flag\n    setShowDudeImage(false)\n    setOptions([]) // Reset the options\n    setFiftyOptions([])\n    setClickFifty(false)\n    setStartTime(new Date())\n    fetchQuestions()\n  }\n\n  const handleHomePage = () => {\n    navigate('/')\n  }\n\n  return (\n    <div className=\"quiz-container\">\n      <Header page=\"quiz\" />\n\n      {!gameOver && (\n        <div className=\"game\">\n          <span className=\"round\">\n            <p>\n              Round {currentRound}\n            </p>\n          </span>\n          <p className=\"question-number\">{`Question: ${currentQuestionNumber}/${totalQuestions}`}</p>\n          <p className=\"questions\">{currentQuestion.question}</p>\n          <div className=\"middle\">\n            <ul className=\"answers\">\n              {options.map((option, index) => (\n                <li key={index}>\n                  <button\n                    className=\"buttons\"\n                    onClick={() => handleAnswerClick(index)}\n                    onMouseEnter={() => {\n                      handleAudio(state.isMute, sounds.hover)\n                    }}\n                  >\n                    {optionLabel[index]}.&nbsp;\n                    {fiftyOptions.length === 2\n                      ? fiftyOptions.includes(option)\n                        ? option\n                        : ''\n                      : option}\n                  </button>\n                </li>\n              ))}\n            </ul>\n            {showDudeImage && <img className=\"dude\" src={Dude} alt=\"Dude\" />}\n            {showDude2Image && (\n              <img className=\"dude2\" src={Dude2} alt=\"Dude2\" />\n            )}\n            {showDude3Image && (\n              <img className=\"dude3\" src={Dude3} alt=\"Dude3\" />\n            )}\n          </div>\n          <p className=\"lives\">\n            Lives: {Array.from({ length: lives }, (_, index) => '❤️').join(' ')}\n          </p>\n          <p className=\"your-score\">Score: {score}</p>\n          <p className=\"timer\">\n            Time Left: {Math.floor(timer / 60)}:\n            {(timer % 60).toString().padStart(2, '0')}\n          </p>{' '}\n          {showHint && <p className=\"hint\">Hint: {currentQuestion.hint}</p>}\n          <div className=\"powerUpButtons\">\n            <button\n              className=\"h-button\"\n              onClick={handleHintClick}\n              onMouseEnter={() => {\n                handleAudio(state.isMute, sounds.hover)\n              }}\n            >\n              Hint\n            </button>\n            <button\n              className=\"s-button\"\n              onClick={handleSkipClick}\n              onMouseEnter={() => {\n                handleAudio(state.isMute, sounds.hover)\n              }}\n            >\n              Skip\n            </button>\n            <button\n              disabled={options.length < 4 || clickFifty}\n              className=\"fifty-fifty-button\"\n              onClick={handleFiftyClick}\n              onMouseEnter={() => {\n                handleAudio(state.isMute, sounds.hover)\n              }}\n            >\n              50/50\n            </button>\n            <button\n              disabled={clickSwap}\n              className=\"switch-button\"\n              onClick={handleSwapClick}\n              onMouseEnter={() => {\n                handleAudio(state.isMute, sounds.hover)\n              }}\n            >\n              Swap\n            </button>\n          </div>\n        </div>\n      )}\n\n      {gameOver && (\n        <div className=\"game-over-popup\">\n          <h1>Game Over!</h1>\n          <li>Final Score: {score}</li>\n          <li>Time taken to complete the quiz: {finishTime}</li>\n          <li>Total hints used: {hintCount}</li>\n          <li>Total swap used: {swapCount}</li>\n          <li>Total 50:50 used: {fiftyCount}</li>\n          <li>Total skip used: {skipCount}</li>\n          <div className=\"game-over-buttons\">\n            <button onClick={handlePlayAgain}>Play Again</button>\n            <button onClick={handleHomePage}>Main Page</button>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\n// Helper function to format milliseconds into a readable time format\nconst formatTime = (milliseconds) => {\n  const seconds = Math.floor(milliseconds / 1000)\n  const minutes = Math.floor(seconds / 60)\n  return `${minutes} minutes and ${seconds % 60} seconds`\n}\n\nexport default QuizComponent\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}